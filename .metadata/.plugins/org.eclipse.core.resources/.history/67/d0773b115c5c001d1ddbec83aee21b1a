package Kodlama.io.Devs.kodlamaIoDevs.business.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import Kodlama.io.Devs.kodlamaIoDevs.business.abstracts.LanguageService;
import Kodlama.io.Devs.kodlamaIoDevs.business.abstracts.TechnologyService;
import Kodlama.io.Devs.kodlamaIoDevs.business.requests.technology.CreateTechnologyRequest;
import Kodlama.io.Devs.kodlamaIoDevs.business.requests.technology.UpdateTechnologyRequest;
import Kodlama.io.Devs.kodlamaIoDevs.business.responses.technology.GetAllTechnologiesResponse;
import Kodlama.io.Devs.kodlamaIoDevs.business.responses.technology.GetByIdTechnologyResponse;
import Kodlama.io.Devs.kodlamaIoDevs.dataAccess.abstracts.TechnologyRepository;
import Kodlama.io.Devs.kodlamaIoDevs.entities.concretes.Technology;

@Service
public class TechnologyManager implements TechnologyService {
	
	private TechnologyRepository technologyRepository;
	private LanguageService languageService;

	@Autowired
	public TechnologyManager(TechnologyRepository technologyRepository, LanguageService languageService) {
		this.technologyRepository = technologyRepository;
		this.languageService = languageService;
	}

	@Override
	public List<GetAllTechnologiesResponse> getAll() {
		
		List<Technology> technologies = technologyRepository.findAll();
		List<GetAllTechnologiesResponse> technologyResponse = new ArrayList<GetAllTechnologiesResponse>();
		
		for (Technology technology : technologies) {
			GetAllTechnologiesResponse responseItem = new GetAllTechnologiesResponse();
			responseItem.setId(technology.getId());
			responseItem.setName(technology.getName());
			responseItem.setLanguageId(technology.getLanguage().getId());
			responseItem.setLanguageName(technology.getLanguage().getName());
			
			technologyResponse.add(responseItem);
		}
		
		return technologyResponse;
	}

	@Override
	public GetByIdTechnologyResponse getById(int id) {
		GetByIdTechnologyResponse technologyResponse = new GetByIdTechnologyResponse();
		Technology technology = technologyRepository.getReferenceById(id);
		
		technologyResponse.setId(technology.getId());
		technologyResponse.setName(technology.getName());
		technologyResponse.setLanguage(technology.getLanguage());
		
		 
		return technologyResponse;
		
	}


	@Override
	public void delete(int id) {
		this.technologyRepository.deleteById(id);
		
	}


	@Override
	public void add(CreateTechnologyRequest technology) {
		Technology addedTechnology = new Technology();
		addedTechnology.setName(technology.getName());
		addedTechnology.setLanguage(languageService.getLanguageById(technology.getLanguageId()));
		
		
		this.technologyRepository.save(addedTechnology);
		
	}

	@Override
	public void update(int id, UpdateTechnologyRequest technology) {
		Technology updatedTechnology = technologyRepository.getReferenceById(id);
		updatedTechnology.setName(technology.getName());
		updatedTechnology.setLanguage(languageService.getLanguageById(technology.getLanguageId()));
		
		this.technologyRepository.save(updatedTechnology);
		
	}

}
